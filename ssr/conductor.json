{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "instanceName": {
      "type": "string",
      "defaultValue": "128conductor",
      "metadata": {
        "description": "Name of the instance."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Name of the location of an existing VNet the 128T Technology Conductor should be deployed to. From the following list https://azure.microsoft.com/en-us/global-infrastructure/locations type a location as one word and all lowercase."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet0",
      "metadata": {
        "description": "Name of an existing VNet within the resource group the 128 Technology Router should be deployed to."
      }
    },
    "controlSubnetName": {
      "type": "string",
      "defaultValue": "control",
      "metadata": {
        "description": "Name of an existing public subnet to place the 128 Technology Conductor's control interface. It must be the name of an existing public subnet in the VNet."
      }
    },
    "controlAllowedCidr": {
      "type": "string",
      "minLength": 9,
      "maxLength": 18,
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "OPTIONAL- What is the IP CIDR range of the control interfaces of the Routers managed by the Conductor? Must be a valid IP CIDR range of the form x.x.x.x/x. If no IP CIDR range is specified all IP addresses will be allowed by default (0.0.0.0/0)."
      }
    },
    "instanceSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS3_v2",
        "Standard_F8",
        "Standard_F8s_v2",
        "Standard_F16s_v2",
        "Standard_F32s_v2",
        "Standard_F64s_v2"
      ]
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username used to authenticate with the VM instance via SSH."
      }
    },
    "adminPublicKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH public key certificate used to authenticate with the VM instance through SSH. The key needs to be at least 2048-bit and in ssh-rsa format."
      }
    },
    "adminAllowedCidr": {
      "type": "string",
      "minLength": 9,
      "maxLength": 18,
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "OPTIONAL- What is the IP CIDR range of the endpoints allowed to access the 128 Technology Conductor for administration purposes? Must be a valid IP CIDR range of the form x.x.x.x/x. All IP addresses are allowed by default (0.0.0.0/0)."
      }
    },
    "certificateSASURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OPTIONAL- SAS URL of the certificate provided by 128 Technology for installing the 128T software in non interactive mode. If no certificate SAS URL is provided the installation of the 128T software will be interactive."
      }
    }
  },
  "variables": {
    "controlSubnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('controlSubnetName'))]",
    "addressSpacePrefix": "10.0.0.0/16",
    "controlSubnetPrefix": "10.0.0.0/24"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "comments": "Create VNet1",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressSpacePrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('controlSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('controlSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('instanceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "adminSSH",
            "properties": {
              "description": "Allows SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('adminAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "adminHTTPs",
            "properties": {
              "description": "Allows HTTPs",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('adminAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "control",
            "properties": {
              "description": "Allows control connections from 128 Technology Routers",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "930",
              "sourceAddressPrefix": "[parameters('controlAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "automatedProvisioner",
            "properties": {
              "description": "Allows automatedProvisioner connections from 128 Technology Routers",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4505-4506",
              "sourceAddressPrefix": "[parameters('controlAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('instanceName'), '-control')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('instanceName'), '-control')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('instanceName'), '-control'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('instanceName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('instanceName'))]"
        },
        "ipConfigurations": [
          {
            "name": "[concat(parameters('instanceName'), '-control')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('instanceName'), '-control'))]"
              },
              "subnet": {
                "id": "[variables('controlSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-07-01",
      "condition": "[not(empty(parameters('certificateSASURL')))]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('instanceName'), '_autoinstall')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-control'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('instanceName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKeyData')]"
                }
              ]
            }
          },
          "customData": "[base64(concat('{\"yum-certificate-sas-url\":\"',parameters('certificateSASURL'),'\",','\"install128t\":{\"enable-128t\":true,\"install\":{\"initialize\":{\"disable-sizing\":false,\"disable-tuning\":false,\"node-role\":\"conductor\",\"node-name\":\"Conductor\",\"router-name\":\"Conductor\"}},\"reboot-if-required\":true}}'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "juniper-networks",
            "offer": "session-smart-networking-payg",
            "sku": "session-smart-networking-private-543",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('instanceName')]",
            "createOption": "FromImage",
            "diskSizeGB": 60
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('instanceName'), '-control'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      },
      "plan": {
        "name": "session-smart-networking-private-543",
        "publisher": "juniper-networks",
        "product": "session-smart-networking-payg"
      }
    },
    {
      "apiVersion": "2021-07-01",
      "condition": "[empty(parameters('certificateSASURL'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('instanceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-control'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('instanceName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "juniper-networks",
            "offer": "session-smart-networking-payg",
            "sku": "session-smart-networking-private-543",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('instanceName')]",
            "createOption": "FromImage",
            "diskSizeGB": 60
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('instanceName'), '-control'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      },
      "plan": {
        "name": "session-smart-networking-private-543",
        "publisher": "juniper-networks",
        "product": "session-smart-networking-payg"
      }
    }
  ],
  "outputs": {
    "internalControlIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-control'))).ipConfigurations[0].properties.privateIPAddress]"
    },
    "publicControlIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('instanceName'), '-control'))).ipAddress]"
    },
    "SSHLogin": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(resourceId('Microsoft.Network/publicIPAddresses/', concat(parameters('instanceName'), '-control'))).ipAddress)]"
    },
    "HTTPSLogin": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('instanceName'), '-control'))).ipAddress)]"
    },
    "LoginUser": {
      "type": "string",
      "value": "admin"
    }
  }
}