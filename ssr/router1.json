{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "instanceName": {
      "type": "string",
      "defaultValue": "r1",
      "metadata": {
        "description": "Name of the instance."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Name of the location of an existing VNet the 128T Technology Router should be deployed to. From the following list https://azure.microsoft.com/en-us/global-infrastructure/locations type a location as one word and all lowercase."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet2",
      "metadata": {
        "description": "Name of an existing VNet within the resource group the 128 Technology Router should be deployed to."
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "av-set1",
      "metadata": {
        "description": "Name of an existing Availability Set within the same resource group and region as the VNet selected above the 128 Technology Router should be deployed to."
      }
    },
    "publicSubnetName": {
      "type": "string",
      "defaultValue": "public",
      "metadata": {
        "description": "To which existing public subnet should the Router's public interface be attached?. It must be the name of an existing public subnet in the VNet selected above."
      }
    },
    "publicSubnetAllowedCidr": {
      "type": "string",
      "minLength": 9,
      "maxLength": 18,
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "OPTIONAL- In the public subnet, what is the IP CIDR range of the endpoints allowed to originate traffic to the Router's public interface?. Must be a valid IP CIDR range of the form x.x.x.x/x. If no IP CIDR range is specified all IP addresses will be allowed by default (0.0.0.0/0)."
      }
    },
    "privateSubnetName": {
      "type": "string",
      "defaultValue": "private",
      "metadata": {
        "description": "To which existing private subnet should the Router's private interface be attached?. It must be the name of an existing private subnet in the VNet selected above."
      }
    },
    "privateSubnetAllowedCidr": {
      "type": "string",
      "minLength": 9,
      "maxLength": 18,
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "OPTIONAL- In the private subnet, what is the IP CIDR range of the endpoints allowed to originate traffic to the Router's private interface?. Must be a valid IP CIDR range of the form x.x.x.x/x. If no IP CIDR range is specified all IP addresses will be allowed by default (0.0.0.0/0)."
      }
    },
    "managementSubnetName": {
      "type": "string",
      "defaultValue": "management",
      "metadata": {
        "description": "To which existing management subnet should the Router's management interface be attached?. It must be the name of an existing management subnet in the VNet selected above."
      }
    },
    "adminAllowedCidr": {
      "type": "string",
      "minLength": 9,
      "maxLength": 18,
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "OPTIONAL - What is the IP CIDR range of the endpoints allowed to access the 128 Technology Session Smart Router for administration purposes? Must be a valid IP CIDR range of the form x.x.x.x/x. All IP addresses are allowed by default (0.0.0.0/0)."
      }
    },
    "conductorPrimaryControlIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OPTIONAL - IP address of the control interface of the primary node of 128 Technology Conductor reachable from the Public subnet selected above. It must be a valid IP address of the form x.x.x.x. If no IP address is provided the installation of the 128T software will be interactive."
      }
    },
    "conductorSecondaryControlIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OPTIONAL - IP address of the control interface of the secondary node of 128 Technology Conductor reachable from the Public subnet selected above. It must be a valid IP address of the form x.x.x.x."
      }
    },
    "instanceSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS3_v2",
        "Standard_F8",
        "Standard_F8s_v2",
        "Standard_F16s_v2",
        "Standard_F32s_v2",
        "Standard_F48s_v2",
        "Standard_F64s_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Size of the instance."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username used to authenticate with the VM instance via SSH."
      }
    },
    "adminPublicKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH public key certificate used to authenticate with the VM instance via SSH. The key needs to be at least 2048-bit and in ssh-rsa format."
      }
    }
  },
  "variables": {
    "addressSpacePrefix": "10.1.0.0/16",
    "managementSubnetPrefix": "10.1.0.0/24",
    "publicSubnetPrefix": "10.1.1.0/24",
    "privateSubnetPrefix": "10.1.2.0/24",
    "availabilitySetRef": "[resourceId(resourceGroup().name, 'Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]",
    "managementSubnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('managementSubnetName'))]",
    "publicSubnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('publicSubnetName'))]",
    "privateSubnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateSubnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2021-07-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 3
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "comments": "Create VNet1. subnet1 is assigned to RouteServerSubnet. subnet4 is used for the Ubuntu VM",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressSpacePrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('managementSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('managementSubnetPrefix')]"
            }
          },
          {
            "name": "[parameters('publicSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('publicSubnetPrefix')]"
            }
          },
          {
            "name": "[parameters('privateSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('privateSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('instanceName'), '-mgmt')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "adminSSH",
            "properties": {
              "description": "Allows SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('adminAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "adminHTTPs",
            "properties": {
              "description": "Allows HTTPs",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('adminAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('instanceName'), '-mgmt')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('instanceName'), '-mgmt')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('instanceName'), '-mgmt'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('instanceName'), '-mgmt'))]"
      ],
      "properties": {
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('instanceName'), '-mgmt'))]"
        },
        "ipConfigurations": [
          {
            "name": "[concat(parameters('instanceName'), '-mgmt')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('instanceName'), '-mgmt'))]"
              },
              "subnet": {
                "id": "[variables('managementSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('instanceName'), '-public')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "adminSSH",
            "properties": {
              "description": "Allows SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('adminAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "adminHTTPs",
            "properties": {
              "description": "Allows HTTPs",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('adminAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "tcpBFD",
            "properties": {
              "description": "Allows BFD TCP to peer with other 128 Technology Routers",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1280",
              "sourceAddressPrefix": "[parameters('publicSubnetAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "udpBFD",
            "properties": {
              "description": "Allows BFD UDP to peer with other 128 Technology Routers",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "1280",
              "sourceAddressPrefix": "[parameters('publicSubnetAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          },
          {
            "name": "tcpSVR",
            "properties": {
              "description": "Allows SVR TCP to peer with other from 128 Technology Routers",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "16000-65000",
              "sourceAddressPrefix": "[parameters('publicSubnetAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "udpSVR",
            "properties": {
              "description": "Allows SVR UDP to peer with other from 128 Technology Routers",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "16000-65000",
              "sourceAddressPrefix": "[parameters('publicSubnetAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 600,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('instanceName'), '-public')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('instanceName'), '-public')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses/', concat(parameters('instanceName'), '-public'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', concat(parameters('instanceName'), '-public'))]"
      ],
      "properties": {
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('instanceName'), '-public'))]"
        },
        "ipConfigurations": [
          {
            "name": "[concat(parameters('instanceName'), '-public')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('instanceName'), '-public'))]"
              },
              "subnet": {
                "id": "[variables('publicSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('instanceName'), '-private')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "private",
            "properties": {
              "description": "Private",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('privateSubnetAllowedCidr')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('instanceName'), '-private')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', concat(parameters('instanceName'), '-private'))]"
      ],
      "properties": {
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('instanceName'), '-private'))]"
        },
        "ipConfigurations": [
          {
            "name": "[concat(parameters('instanceName'), '-private')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('privateSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-07-01",
      "condition": "[not(empty(parameters('conductorPrimaryControlIP')))]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('instanceName'), '_ZTP')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('instanceName'), '-public'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('instanceName'), '-private'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('instanceName'), '-mgmt'))]",
        "[resourceId(resourceGroup().name, 'Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('instanceName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKeyData')]"
                }
              ]
            }
          },
          "customData": "[base64(concat('{\"conductor-ip-primary\":\"',parameters('conductorPrimaryControlIP'),'\",','\"conductor-ip-secondary\":\"',parameters('conductorSecondaryControlIP'),'\"}'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "juniper-networks",
            "offer": "session-smart-networking-payg",
            "sku": "session-smart-networking-private-543",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('instanceName')]",
            "createOption": "FromImage",
            "diskSizeGB": 60
          }
        },
        "availabilitySet": {
          "id": "[variables('availabilitySetRef')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-mgmt'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-public'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-private'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      },
      "plan": {
                "name": "session-smart-networking-private-543",
                "publisher": "juniper-networks",
                "product": "session-smart-networking-payg"
            }
    },
    {
      "apiVersion": "2021-07-01",
      "condition": "[empty(parameters('conductorPrimaryControlIP'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('instanceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-public'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-private'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-mgmt'))]",
        "[resourceId(resourceGroup().name, 'Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('instanceName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
                        "publisher": "juniper-networks",
                        "offer": "session-smart-networking-payg",
                        "sku": "session-smart-networking-private-543",
                        "version": "latest"
                    },
          "osDisk": {
            "name": "[parameters('instanceName')]",
            "createOption": "FromImage",
            "diskSizeGB": "60"
          }
        },
        "availabilitySet": {
          "id": "[variables('availabilitySetRef')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-mgmt'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-public'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('instanceName'), '-private'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      },
      "plan": {
                "name": "session-smart-networking-private-543",
                "publisher": "juniper-networks",
                "product": "session-smart-networking-payg"
            }
    }
  ],
  "outputs": {
    "instanceIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses/', concat(parameters('instanceName'), '-mgmt'))).ipAddress]"
    },
    "SSHLogin": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(resourceId('Microsoft.Network/publicIPAddresses/', concat(parameters('instanceName'), '-mgmt'))).ipAddress)]"
    },
    "LoginUser": {
      "type": "string",
      "value": "admin"
    }
  }
}