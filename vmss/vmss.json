{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "authenticationType": {
      "type": "string",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "vmNamePrefix": {
      "defaultValue": "vm",
      "type": "string",
      "maxLength": 15,
      "metadata": {
        "description": "Name of the virtual machine to be created"
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 2,
      "metadata": {
        "description": "Number of  virtual machines to be created"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Virtual Machine Size"
      }
    },
    "operatingSystem": {
      "type": "string",
      "defaultValue": "UbuntuLTS",
      "metadata": {
        "description": "Operating System of the Server"
      },
      "allowedValues": [
        "UbuntuLTS"
      ]
    },
    "vmScaleSetName": {
      "defaultValue": "vmss1",
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Scale Set Name where the VM will be placed"
      }
    },
    "virtualMachineScaleSetAvailabilityZone": {
      "type": "string",
      "defaultValue": "none",
      "metadata": {
        "description": "Specify an Availability Zone for the Virtual Machine Scale Set. All Virtual Machines added the the scale set will inherit this zone. Not all Azure regions support Availability zones. VMSS deployed into a zone must have a platformFaultDomainCount = 5. Learn more about maximum fault domain count by region: https://aka.ms/azurefdcountbyregion"
      },
      "allowedValues": [
        "none",
        "1",
        "2",
        "3"
      ]
    },
    "dnsPrefixForPublicIP": {
      "type": "string",
      "minLength": 1,
      "maxLength": 14,
      "defaultValue": "[concat('d',uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Globally unique DNS prefix for the Public IPs used to access the Virtual Machines"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "vnetName": "vnet1",
    "vnetPrefix": "10.0.0.0/16",
    "subnet1Name": "subnet1",
    "subnet1Prefix": "10.0.0.0/24",
    "operatingSystemValues": {
      "UbuntuLTS": {
        "PublisherValue": "Canonical",
        "OfferValue": "0001-com-ubuntu-server-focal",
        "SkuValue": "20_04-lts"
      }
    },
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),  variables('subnet1Name'))]",
    "noZoneObj": {
      "none": null
    },
    "selectedZone": "[ variables('noZoneObj').none]",
    "virtualMachineScaleSetPlatformFaultDomainCount": "[if(equals(parameters('virtualMachineScaleSetAvailabilityZone'), 'none'), variables('fdCountOptions').nonzonal, variables('fdCountOptions').zonal)]",
    "fdCountOptions": {
      "zonal": 1,
      "nonzonal": 2
    },
    "nsgName": "[concat(variables('subnet1Name'), '-nsg')]"
  },
  "resources": [
    {
      "comments": "Simple Network Security Group for subnet [variables('subnet1Name')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-08-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 500,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2021-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "tags": {
        "displayName": "[variables('vnetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmScaleSetName')]",
      "apiVersion": "2021-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "singlePlacementGroup": false,
        "platformFaultDomainCount": "[variables('virtualMachineScaleSetPlatformFaultDomainCount')]"
      },
      "zones": "[variables('selectedZone')]"
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyIndex(1))]",
      "apiVersion": "2021-11-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "VMcopy",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmScaleSetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), copyIndex(1), '-nic1'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('operatingSystemValues')[parameters('operatingSystem')].PublisherValue]",
            "offer": "[variables('operatingSystemValues')[parameters('operatingSystem')].OfferValue]",
            "sku": "[variables('operatingSystemValues')[parameters('operatingSystem')].SkuValue]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmNamePrefix'),copyIndex(1))]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'),copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), copyIndex(1), '-nic1'))]"
            }
          ]
        },
        "virtualMachineScaleSet": {
          "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmScaleSetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNamePrefix'), copyIndex(1), '-nic1')]",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNamePrefix'), copyIndex(1), '-pubIP1'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ],
      "copy": {
        "name": "NICCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNamePrefix'), copyIndex(1), '-pubIP1'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "enableIPForwarding": false
      }
    },
    {
      "apiVersion": "2021-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmNamePrefix'), copyIndex(1), '-pubIP1')]",
      "location": "[parameters('location')]",
      "zones": "[variables('selectedZone')]",
      "copy": {
        "name": "pubIPCopy",
        "count": "[parameters('vmCount')]"
      },
      "tags": {
        "displayName": "[concat(parameters('vmNamePrefix'), copyIndex(1), '-pubIP1')]"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsPrefixForPublicIP'), copyIndex(1))]"
        }
      }
    }
  ],
  "outputs": {}
}